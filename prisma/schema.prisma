// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  // url               = env("DATABASE_URL")
  url               = "postgres://ropksndnqzlxeu:b7fc382e11be7a5f0adb4959f8cba7d2506b4ea683dc8662f377f5b40790d43a@ec2-54-170-90-26.eu-west-1.compute.amazonaws.com:5432/d1psi6kj87qrpf"
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  shadowDatabaseUrl = "postgres://jdabspisrbexbn:bff5cd29e63c3341c0cf3192ee09501e6701ad9033a15c78a7c0cecc64a68c89@ec2-52-48-159-67.eu-west-1.compute.amazonaws.com:5432/dch70mmrsbk43b"
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  playlists Playlist[]
}

model Song {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  artist     Artist   @relation(fields: [artistId], references: [id])
  artistId   Int
  playlists  Playlist[]
  duration   Int
  url        String
}

model Artist {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  songs     Song[]
  name      String   @unique
}

model Playlist {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  songs     Song[]
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
}
